null!=localStorage.getItem("theme")?(getColour=localStorage.theme,document.body.className=getColour):document.body.classList.add("lightTheme");const dayButton=document.getElementById("night");dayButton.addEventListener("click",()=>{setColour="lightTheme",document.body.className=setColour,localStorage.setItem("theme",setColour)});const nightButton=document.getElementById("day");nightButton.addEventListener("click",()=>{setColour="darkTheme",document.body.className=setColour,localStorage.setItem("theme",setColour)}),document.addEventListener("DOMContentLoaded",function(){var e;if("IntersectionObserver"in window){e=document.querySelectorAll(".lazy");var t=new IntersectionObserver(function(e,o){e.forEach(function(e){if(e.isIntersecting){var o=e.target;o.src=o.dataset.src,o.classList.remove("lazy"),t.unobserve(o)}})});e.forEach(function(e){t.observe(e)})}else{var o;function n(){o&&clearTimeout(o),o=setTimeout(function(){var t=window.pageYOffset;e.forEach(function(e){e.offsetTop<window.innerHeight+t&&(e.src=e.dataset.src,e.classList.remove("lazy"))}),0==e.length&&(document.removeEventListener("scroll",n),window.removeEventListener("resize",n),window.removeEventListener("orientationChange",n))},20)}e=document.querySelectorAll(".lazy"),window.addEventListener("load",n),document.addEventListener("scroll",n),window.addEventListener("resize",n),window.addEventListener("orientationChange",n)}}),"serviceWorker"in navigator?(console.log("CLIENT: service worker registration in progress."),navigator.serviceWorker.register("../service-worker.min.js").then(function(){console.log("CLIENT: service worker registration complete.")},function(){console.log("CLIENT: service worker registration failure.")})):console.log("CLIENT: service worker is not supported.");